name: Render manifests
on:
  push:
    branches:
      - main
      - kargo-render-refactor

permissions: 
  contents: write
  pull-requests: write

jobs:
  render-dev-manifests:
    name: Render `dev` manifests
    runs-on: ubuntu-latest
    steps:
    - run: id
    - run: sudo mkdir -p /github/home/.config && sudo chown -R runner && ls -dv /github/home
    - name: Render manifests
      uses: akuity/kargo-render-action@v0.1.0-rc.35
      with:
        personalAccessToken: ${{ secrets.GITHUB_TOKEN }}
        targetBranch: env/dev
  # render-manifests:
  #   name: Render manifests
  #   runs-on: ubuntu-latest
  #   strategy:
  #    matrix:
  #      env: [dev,prod]

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         # token: ${{ secrets.DEPLOY_PAT }}
  #         fetch-depth: 0  # needed to get all branches
  #     - uses: fregante/setup-git-user@v1

  #     - name: Render Helm Manifests
  #       working-directory: helm/prometheus-umbrella
  #       run: |
  #         helm dependency build
  #         helm template ./ > /tmp/prometheus-umbrella.yml
  #         rm -rf Chart.lock charts/

  #     - name: Render Kustomize Manifests
  #       working-directory: kustomize/overlays/${{ matrix.env }}
  #       run: |
  #         kustomize build ./ > /tmp/kustomize-${{ matrix.env }}.yaml

  #     - name: Create env/${{ matrix.env }} if it doesn't exist.
  #       run: |

  #         # Create env branch if it doesn't exist.
  #         if ! git checkout env/${{ matrix.env }} -- ; then
  #           git checkout --orphan env/${{ matrix.env }}
  #           git rm -rf .
  #           git commit --allow-empty -m "chore: create env/${{ matrix.env }} branch"
  #           git push --set-upstream origin env/${{ matrix.env }}
  #         fi

  #     - name: Push to env/${{ matrix.env }}
  #       if: ${{ matrix.env == 'dev' }}
  #       run: |

  #         # Copy rendered manifests.
  #         cp /tmp/prometheus-umbrella.yml . 
  #         cp /tmp/kustomize-${{ matrix.env }}.yaml . 
  #         git add .

  #         # Push to env branch.
  #         if ! git diff --quiet HEAD ; then
  #           git commit -m "${{ github.event.head_commit.message }}"
  #           git push --set-upstream origin env/${{ matrix.env }}
  #         fi
      
  #     - name: Create PR for env/${{ matrix.env }}
  #       if: ${{ matrix.env == 'prod' }}
  #       env:
  #         GH_TOKEN: ${{ github.token }}
  #       run: |

  #         git checkout -b promote-to-prod-${{ github.event.head_commit.id }}

  #         # Copy rendered manifests.
  #         cp /tmp/prometheus-umbrella.yml . 
  #         cp /tmp/kustomize-${{ matrix.env }}.yaml . 
  #         git add .

  #         # Push to env branch.
  #         if ! git diff --quiet HEAD ; then
  #           git commit -m "${{ github.event.head_commit.message }}"
  #           git push --set-upstream origin promote-to-prod-${{ github.event.head_commit.id }}
  #           gh pr create \
  #             --title "chore(prod): promote to prod ${{ github.event.head_commit.id }}" \
  #             --body "promote to prod ${{ github.event.head_commit.id }}" \
  #             --base env/${{ matrix.env }} \
  #             --head promote-to-prod-${{ github.event.head_commit.id }}
  #         fi